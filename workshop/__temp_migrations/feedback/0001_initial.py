# -*- coding: utf-8 -*-
# Generated by Django 1.11.2 on 2019-01-27 20:56
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import otree.db.models
import otree_save_the_change.mixins


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_group', to='otree.Session')),
            ],
            options={
                'db_table': 'feedback_group',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_gbat_arrived', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('_gbat_grouped', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False)),
                ('languages', otree.db.models.IntegerField(choices=[[1, 'Unsure'], [2, 'Agree partially'], [3, 'Agree']], null=True, verbose_name='I recognize the different coding languages (HTML5, JavaScript, Python, Django) and know when to use which')),
                ('dynamic', otree.db.models.IntegerField(choices=[[1, 'Unsure'], [2, 'Agree partially'], [3, 'Agree']], null=True, verbose_name='I can dynamically change the context of a web page')),
                ('syntax', otree.db.models.IntegerField(choices=[[1, 'Unsure'], [2, 'Agree partially'], [3, 'Agree']], null=True, verbose_name='I know the basic syntax of each coding language (HTML5, JavaScript, Python, Django) and how to search advice online')),
                ('structure', otree.db.models.IntegerField(choices=[[1, 'Unsure'], [2, 'Agree partially'], [3, 'Agree']], null=True, verbose_name='I understand the basic purpose of the main oTree files and how they come together')),
                ('debugging', otree.db.models.IntegerField(choices=[[1, 'Unsure'], [2, 'Agree partially'], [3, 'Agree']], null=True, verbose_name='I can decode error messages (command output and oTree error messages) and find potential solutions')),
                ('inspect', otree.db.models.IntegerField(choices=[[1, 'Unsure'], [2, 'Agree partially'], [3, 'Agree']], null=True, verbose_name='I can inspect the source code on the browser')),
                ('difficulty', otree.db.models.IntegerField(choices=[[1, 'Too easy'], [2, 'Ok, varied, both easy and difficult'], [3, 'Too difficult (but I understood what was being asked)'], [4, 'Buggy, with many mistakes, too long, or unclear']], null=True, verbose_name='I found tasks')),
                ('stuck', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='If you can remember an occasion where you got stuck, please describe here, when it happened.')),
                ('useful', otree.db.models.IntegerField(choices=[[1, 'Learning basic languages: html, Django, JavaScript, Python'], [2, 'Learning about debugging (console log, code inspection, oTree error feedback)'], [3, 'Learning about the basic structure of oTree and how to modify it'], [4, 'Learning about the online resources and how to use them']], null=True, verbose_name='I found most useful (choose only one)')),
                ('success', otree.db.models.LongStringField(blank=True, null=True, verbose_name='What did you succeed in today?')),
                ('future', otree.db.models.LongStringField(blank=True, null=True, verbose_name='What do you want to learn in the next session?')),
                ('comment', otree.db.models.StringField(blank=True, max_length=10000, null=True, verbose_name='You can leave a free comment here:')),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='feedback.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='feedback_player', to='otree.Session')),
            ],
            options={
                'db_table': 'feedback_player',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='feedback_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'feedback_subsession',
            },
            bases=(otree_save_the_change.mixins.SaveTheChange, models.Model),
        ),
        migrations.AddField(
            model_name='player',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Subsession'),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='feedback.Subsession'),
        ),
    ]
